/*
 * Route Optimization
 * With the Route Optimization service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.StopReport;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Contains summary values of the events at a stop, including the arrival time, the departure time and the service time It also contains information about the loaded quantities when leaving the current stop.
 */
@ApiModel(description = "Contains summary values of the events at a stop, including the arrival time, the departure time and the service time It also contains information about the loaded quantities when leaving the current stop.")
@JsonPropertyOrder({
  StopReportForStop.JSON_PROPERTY_ARRIVAL_TIME,
  StopReportForStop.JSON_PROPERTY_DEPARTURE_TIME,
  StopReportForStop.JSON_PROPERTY_SERVICE_TIME,
  StopReportForStop.JSON_PROPERTY_WAITING_TIME,
  StopReportForStop.JSON_PROPERTY_BREAK_TIME,
  StopReportForStop.JSON_PROPERTY_REST_TIME,
  StopReportForStop.JSON_PROPERTY_QUANTITIES,
  StopReportForStop.JSON_PROPERTY_ALTERNATIVE_CAPACITIES_INDEX
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-16T10:38:20.714+02:00[Europe/Berlin]")
public class StopReportForStop {
  public static final String JSON_PROPERTY_ARRIVAL_TIME = "arrivalTime";
  private OffsetDateTime arrivalTime;

  public static final String JSON_PROPERTY_DEPARTURE_TIME = "departureTime";
  private OffsetDateTime departureTime;

  public static final String JSON_PROPERTY_SERVICE_TIME = "serviceTime";
  private Integer serviceTime;

  public static final String JSON_PROPERTY_WAITING_TIME = "waitingTime";
  private Integer waitingTime;

  public static final String JSON_PROPERTY_BREAK_TIME = "breakTime";
  private Integer breakTime;

  public static final String JSON_PROPERTY_REST_TIME = "restTime";
  private Integer restTime;

  public static final String JSON_PROPERTY_QUANTITIES = "quantities";
  private List<Integer> quantities = null;

  public static final String JSON_PROPERTY_ALTERNATIVE_CAPACITIES_INDEX = "alternativeCapacitiesIndex";
  private JsonNullable<Integer> alternativeCapacitiesIndex = JsonNullable.<Integer>undefined();

  public StopReportForStop() { 
  }

  public StopReportForStop arrivalTime(OffsetDateTime arrivalTime) {
    this.arrivalTime = arrivalTime;
    return this;
  }

   /**
   * The planned time of arrival at the stop formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).
   * @return arrivalTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The planned time of arrival at the stop formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).")
  @JsonProperty(JSON_PROPERTY_ARRIVAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getArrivalTime() {
    return arrivalTime;
  }


  @JsonProperty(JSON_PROPERTY_ARRIVAL_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArrivalTime(OffsetDateTime arrivalTime) {
    this.arrivalTime = arrivalTime;
  }


  public StopReportForStop departureTime(OffsetDateTime departureTime) {
    this.departureTime = departureTime;
    return this;
  }

   /**
   * The planned time of departure from the stop formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).
   * @return departureTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The planned time of departure from the stop formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).")
  @JsonProperty(JSON_PROPERTY_DEPARTURE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDepartureTime() {
    return departureTime;
  }


  @JsonProperty(JSON_PROPERTY_DEPARTURE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDepartureTime(OffsetDateTime departureTime) {
    this.departureTime = departureTime;
  }


  public StopReportForStop serviceTime(Integer serviceTime) {
    this.serviceTime = serviceTime;
    return this;
  }

   /**
   * The service time at the stop [s].
   * @return serviceTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The service time at the stop [s].")
  @JsonProperty(JSON_PROPERTY_SERVICE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getServiceTime() {
    return serviceTime;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceTime(Integer serviceTime) {
    this.serviceTime = serviceTime;
  }


  public StopReportForStop waitingTime(Integer waitingTime) {
    this.waitingTime = waitingTime;
    return this;
  }

   /**
   * The waiting time at the stop [s].
   * @return waitingTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The waiting time at the stop [s].")
  @JsonProperty(JSON_PROPERTY_WAITING_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWaitingTime() {
    return waitingTime;
  }


  @JsonProperty(JSON_PROPERTY_WAITING_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWaitingTime(Integer waitingTime) {
    this.waitingTime = waitingTime;
  }


  public StopReportForStop breakTime(Integer breakTime) {
    this.breakTime = breakTime;
    return this;
  }

   /**
   * The break time at the stop [s].
   * @return breakTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The break time at the stop [s].")
  @JsonProperty(JSON_PROPERTY_BREAK_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBreakTime() {
    return breakTime;
  }


  @JsonProperty(JSON_PROPERTY_BREAK_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBreakTime(Integer breakTime) {
    this.breakTime = breakTime;
  }


  public StopReportForStop restTime(Integer restTime) {
    this.restTime = restTime;
    return this;
  }

   /**
   * The rest time at the stop [s].
   * @return restTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The rest time at the stop [s].")
  @JsonProperty(JSON_PROPERTY_REST_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRestTime() {
    return restTime;
  }


  @JsonProperty(JSON_PROPERTY_REST_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRestTime(Integer restTime) {
    this.restTime = restTime;
  }


  public StopReportForStop quantities(List<Integer> quantities) {
    this.quantities = quantities;
    return this;
  }

  public StopReportForStop addQuantitiesItem(Integer quantitiesItem) {
    if (this.quantities == null) {
      this.quantities = new ArrayList<>();
    }
    this.quantities.add(quantitiesItem);
    return this;
  }

   /**
   * The quantities loaded on the vehicle when leaving the stop.
   * @return quantities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The quantities loaded on the vehicle when leaving the stop.")
  @JsonProperty(JSON_PROPERTY_QUANTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getQuantities() {
    return quantities;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantities(List<Integer> quantities) {
    this.quantities = quantities;
  }


  public StopReportForStop alternativeCapacitiesIndex(Integer alternativeCapacitiesIndex) {
    this.alternativeCapacitiesIndex = JsonNullable.<Integer>of(alternativeCapacitiesIndex);
    return this;
  }

   /**
   * This field is only returned if the vehicle cannot transport the **quantities** loaded on the vehicle when leaving the stop with the given **capacities**. In this case this field contains the index of the chosen **alternativeCapacities**. If the route has at least one &#x60;VEHICLE_CAPACITY&#x60; violation this field will not be set.  See [here](./Concepts/Alternative%20Capacities.htm) for more information.
   * @return alternativeCapacitiesIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is only returned if the vehicle cannot transport the **quantities** loaded on the vehicle when leaving the stop with the given **capacities**. In this case this field contains the index of the chosen **alternativeCapacities**. If the route has at least one `VEHICLE_CAPACITY` violation this field will not be set.  See [here](./Concepts/Alternative%20Capacities.htm) for more information.")
  @JsonIgnore

  public Integer getAlternativeCapacitiesIndex() {
        return alternativeCapacitiesIndex.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_CAPACITIES_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getAlternativeCapacitiesIndex_JsonNullable() {
    return alternativeCapacitiesIndex;
  }
  
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_CAPACITIES_INDEX)
  public void setAlternativeCapacitiesIndex_JsonNullable(JsonNullable<Integer> alternativeCapacitiesIndex) {
    this.alternativeCapacitiesIndex = alternativeCapacitiesIndex;
  }

  public void setAlternativeCapacitiesIndex(Integer alternativeCapacitiesIndex) {
    this.alternativeCapacitiesIndex = JsonNullable.<Integer>of(alternativeCapacitiesIndex);
  }


  /**
   * Return true if this Stop_reportForStop object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopReportForStop stopReportForStop = (StopReportForStop) o;
    return Objects.equals(this.arrivalTime, stopReportForStop.arrivalTime) &&
        Objects.equals(this.departureTime, stopReportForStop.departureTime) &&
        Objects.equals(this.serviceTime, stopReportForStop.serviceTime) &&
        Objects.equals(this.waitingTime, stopReportForStop.waitingTime) &&
        Objects.equals(this.breakTime, stopReportForStop.breakTime) &&
        Objects.equals(this.restTime, stopReportForStop.restTime) &&
        Objects.equals(this.quantities, stopReportForStop.quantities) &&
        equalsNullable(this.alternativeCapacitiesIndex, stopReportForStop.alternativeCapacitiesIndex);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(arrivalTime, departureTime, serviceTime, waitingTime, breakTime, restTime, quantities, hashCodeNullable(alternativeCapacitiesIndex));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopReportForStop {\n");
    sb.append("    arrivalTime: ").append(toIndentedString(arrivalTime)).append("\n");
    sb.append("    departureTime: ").append(toIndentedString(departureTime)).append("\n");
    sb.append("    serviceTime: ").append(toIndentedString(serviceTime)).append("\n");
    sb.append("    waitingTime: ").append(toIndentedString(waitingTime)).append("\n");
    sb.append("    breakTime: ").append(toIndentedString(breakTime)).append("\n");
    sb.append("    restTime: ").append(toIndentedString(restTime)).append("\n");
    sb.append("    quantities: ").append(toIndentedString(quantities)).append("\n");
    sb.append("    alternativeCapacitiesIndex: ").append(toIndentedString(alternativeCapacitiesIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

