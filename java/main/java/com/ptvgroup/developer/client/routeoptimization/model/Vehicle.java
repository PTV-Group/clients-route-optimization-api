/*
 * Route Optimization
 * With the Route Optimization service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.CapacitiesChangePosition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * A vehicle that is used to transport goods.
 */
@ApiModel(description = "A vehicle that is used to transport goods.")
@JsonPropertyOrder({
  Vehicle.JSON_PROPERTY_ID,
  Vehicle.JSON_PROPERTY_CAPACITIES,
  Vehicle.JSON_PROPERTY_ALTERNATIVE_CAPACITIES,
  Vehicle.JSON_PROPERTY_CAPACITIES_CHANGE_POSITION,
  Vehicle.JSON_PROPERTY_EQUIPMENT,
  Vehicle.JSON_PROPERTY_PROFILE,
  Vehicle.JSON_PROPERTY_START_LOCATION_ID,
  Vehicle.JSON_PROPERTY_END_LOCATION_ID,
  Vehicle.JSON_PROPERTY_IGNORE_MIXED_LOADING_PROHIBITIONS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-16T11:56:46.561+02:00[Europe/Berlin]")
public class Vehicle {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CAPACITIES = "capacities";
  private List<Integer> capacities = null;

  public static final String JSON_PROPERTY_ALTERNATIVE_CAPACITIES = "alternativeCapacities";
  private List<List<Integer>> alternativeCapacities = null;

  public static final String JSON_PROPERTY_CAPACITIES_CHANGE_POSITION = "capacitiesChangePosition";
  private CapacitiesChangePosition capacitiesChangePosition = CapacitiesChangePosition.BETWEEN_TRIPS;

  public static final String JSON_PROPERTY_EQUIPMENT = "equipment";
  private List<String> equipment = null;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  private String profile = "EUR_TRAILER_TRUCK";

  public static final String JSON_PROPERTY_START_LOCATION_ID = "startLocationId";
  private String startLocationId;

  public static final String JSON_PROPERTY_END_LOCATION_ID = "endLocationId";
  private String endLocationId;

  public static final String JSON_PROPERTY_IGNORE_MIXED_LOADING_PROHIBITIONS = "ignoreMixedLoadingProhibitions";
  private Boolean ignoreMixedLoadingProhibitions = false;

  public Vehicle() { 
  }

  public Vehicle id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique ID across all vehicles.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A unique ID across all vehicles.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Vehicle capacities(List<Integer> capacities) {
    this.capacities = capacities;
    return this;
  }

  public Vehicle addCapacitiesItem(Integer capacitiesItem) {
    if (this.capacities == null) {
      this.capacities = new ArrayList<>();
    }
    this.capacities.add(capacitiesItem);
    return this;
  }

   /**
   * List of capacities for the different quantity dimensions of goods that can be transported. The maximum length of this list is 100. That is, up to 100 different quantity dimensions (e.g. number of pallets, weight, volume, etc.) can be distinguished. Transports can only be executed by a vehicle with a higher (or an equal) maximum capacity in every quantity dimension. The length of this list has to be the same for all transports and all vehicles. If and only if this list of capacities is empty for all vehicles, the quantities of each transport must be empty.
   * @return capacities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of capacities for the different quantity dimensions of goods that can be transported. The maximum length of this list is 100. That is, up to 100 different quantity dimensions (e.g. number of pallets, weight, volume, etc.) can be distinguished. Transports can only be executed by a vehicle with a higher (or an equal) maximum capacity in every quantity dimension. The length of this list has to be the same for all transports and all vehicles. If and only if this list of capacities is empty for all vehicles, the quantities of each transport must be empty.")
  @JsonProperty(JSON_PROPERTY_CAPACITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getCapacities() {
    return capacities;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapacities(List<Integer> capacities) {
    this.capacities = capacities;
  }


  public Vehicle alternativeCapacities(List<List<Integer>> alternativeCapacities) {
    this.alternativeCapacities = alternativeCapacities;
    return this;
  }

  public Vehicle addAlternativeCapacitiesItem(List<Integer> alternativeCapacitiesItem) {
    if (this.alternativeCapacities == null) {
      this.alternativeCapacities = new ArrayList<>();
    }
    this.alternativeCapacities.add(alternativeCapacitiesItem);
    return this;
  }

   /**
   * List of alternative capacities. Each entry in this array must be valid capacities, more details are described in **capacities**. If a route cannot be driven with the **capacities**, alternative capacities may be chosen by the optimization considering the chosen **capacitiesChangePosition**.  See [here](./Concepts/Alternative%20Capacities.htm) for more information.
   * @return alternativeCapacities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of alternative capacities. Each entry in this array must be valid capacities, more details are described in **capacities**. If a route cannot be driven with the **capacities**, alternative capacities may be chosen by the optimization considering the chosen **capacitiesChangePosition**.  See [here](./Concepts/Alternative%20Capacities.htm) for more information.")
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_CAPACITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<List<Integer>> getAlternativeCapacities() {
    return alternativeCapacities;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_CAPACITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternativeCapacities(List<List<Integer>> alternativeCapacities) {
    this.alternativeCapacities = alternativeCapacities;
  }


  public Vehicle capacitiesChangePosition(CapacitiesChangePosition capacitiesChangePosition) {
    this.capacitiesChangePosition = capacitiesChangePosition;
    return this;
  }

   /**
   * Get capacitiesChangePosition
   * @return capacitiesChangePosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CAPACITIES_CHANGE_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CapacitiesChangePosition getCapacitiesChangePosition() {
    return capacitiesChangePosition;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITIES_CHANGE_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapacitiesChangePosition(CapacitiesChangePosition capacitiesChangePosition) {
    this.capacitiesChangePosition = capacitiesChangePosition;
  }


  public Vehicle equipment(List<String> equipment) {
    this.equipment = equipment;
    return this;
  }

  public Vehicle addEquipmentItem(String equipmentItem) {
    if (this.equipment == null) {
      this.equipment = new ArrayList<>();
    }
    this.equipment.add(equipmentItem);
    return this;
  }

   /**
   * List of vehicle equipment. A transport can only be served by the vehicle if this list is a superset of (or equal to) the transport&#39;s required vehicle equipment.
   * @return equipment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of vehicle equipment. A transport can only be served by the vehicle if this list is a superset of (or equal to) the transport's required vehicle equipment.")
  @JsonProperty(JSON_PROPERTY_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEquipment() {
    return equipment;
  }


  @JsonProperty(JSON_PROPERTY_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEquipment(List<String> equipment) {
    this.equipment = equipment;
  }


  public Vehicle profile(String profile) {
    this.profile = profile;
    return this;
  }

   /**
   * The profile defines attributes of the vehicle relevant to determine travel times and distances between any two locations. Default profile is _EUR_TRAILER_TRUCK_. See [here](./Concepts/Profiles%20and%20Countries.htm) for a complete list of allowed values.
   * @return profile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The profile defines attributes of the vehicle relevant to determine travel times and distances between any two locations. Default profile is _EUR_TRAILER_TRUCK_. See [here](./Concepts/Profiles%20and%20Countries.htm) for a complete list of allowed values.")
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfile(String profile) {
    this.profile = profile;
  }


  public Vehicle startLocationId(String startLocationId) {
    this.startLocationId = startLocationId;
    return this;
  }

   /**
   * ID of the vehicle&#39;s start location. If the vehicle start location does not coincide with the location of the first pickup, only the coordinates of the vehicle start location are considered and all other attributes such as opening intervals, service time or type are ignored. If no start location is specified, it is assumed that the vehicle is available at the first stop.
   * @return startLocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the vehicle's start location. If the vehicle start location does not coincide with the location of the first pickup, only the coordinates of the vehicle start location are considered and all other attributes such as opening intervals, service time or type are ignored. If no start location is specified, it is assumed that the vehicle is available at the first stop.")
  @JsonProperty(JSON_PROPERTY_START_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartLocationId() {
    return startLocationId;
  }


  @JsonProperty(JSON_PROPERTY_START_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartLocationId(String startLocationId) {
    this.startLocationId = startLocationId;
  }


  public Vehicle endLocationId(String endLocationId) {
    this.endLocationId = endLocationId;
    return this;
  }

   /**
   * ID of the vehicle&#39;s end location. If the vehicle end location does not coincide with the location of the last delivery, only the coordinates of the vehicle end location are considered and all other attributes such as opening intervals, service time or type are ignored. If no end location is specified, it is assumed that the vehicle remains at the last stop.
   * @return endLocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the vehicle's end location. If the vehicle end location does not coincide with the location of the last delivery, only the coordinates of the vehicle end location are considered and all other attributes such as opening intervals, service time or type are ignored. If no end location is specified, it is assumed that the vehicle remains at the last stop.")
  @JsonProperty(JSON_PROPERTY_END_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndLocationId() {
    return endLocationId;
  }


  @JsonProperty(JSON_PROPERTY_END_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndLocationId(String endLocationId) {
    this.endLocationId = endLocationId;
  }


  public Vehicle ignoreMixedLoadingProhibitions(Boolean ignoreMixedLoadingProhibitions) {
    this.ignoreMixedLoadingProhibitions = ignoreMixedLoadingProhibitions;
    return this;
  }

   /**
   * Indicates whether the mixed loading prohibitions are relevant for this vehicle. If set to false, the mixed loading prohibitions -- if there are any -- must be respected on every trip of the vehicle. If set to true, the mixed loading prohibitions are ignored by the vehicle.
   * @return ignoreMixedLoadingProhibitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the mixed loading prohibitions are relevant for this vehicle. If set to false, the mixed loading prohibitions -- if there are any -- must be respected on every trip of the vehicle. If set to true, the mixed loading prohibitions are ignored by the vehicle.")
  @JsonProperty(JSON_PROPERTY_IGNORE_MIXED_LOADING_PROHIBITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIgnoreMixedLoadingProhibitions() {
    return ignoreMixedLoadingProhibitions;
  }


  @JsonProperty(JSON_PROPERTY_IGNORE_MIXED_LOADING_PROHIBITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIgnoreMixedLoadingProhibitions(Boolean ignoreMixedLoadingProhibitions) {
    this.ignoreMixedLoadingProhibitions = ignoreMixedLoadingProhibitions;
  }


  /**
   * Return true if this Vehicle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return Objects.equals(this.id, vehicle.id) &&
        Objects.equals(this.capacities, vehicle.capacities) &&
        Objects.equals(this.alternativeCapacities, vehicle.alternativeCapacities) &&
        Objects.equals(this.capacitiesChangePosition, vehicle.capacitiesChangePosition) &&
        Objects.equals(this.equipment, vehicle.equipment) &&
        Objects.equals(this.profile, vehicle.profile) &&
        Objects.equals(this.startLocationId, vehicle.startLocationId) &&
        Objects.equals(this.endLocationId, vehicle.endLocationId) &&
        Objects.equals(this.ignoreMixedLoadingProhibitions, vehicle.ignoreMixedLoadingProhibitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, capacities, alternativeCapacities, capacitiesChangePosition, equipment, profile, startLocationId, endLocationId, ignoreMixedLoadingProhibitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    capacities: ").append(toIndentedString(capacities)).append("\n");
    sb.append("    alternativeCapacities: ").append(toIndentedString(alternativeCapacities)).append("\n");
    sb.append("    capacitiesChangePosition: ").append(toIndentedString(capacitiesChangePosition)).append("\n");
    sb.append("    equipment: ").append(toIndentedString(equipment)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    startLocationId: ").append(toIndentedString(startLocationId)).append("\n");
    sb.append("    endLocationId: ").append(toIndentedString(endLocationId)).append("\n");
    sb.append("    ignoreMixedLoadingProhibitions: ").append(toIndentedString(ignoreMixedLoadingProhibitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

