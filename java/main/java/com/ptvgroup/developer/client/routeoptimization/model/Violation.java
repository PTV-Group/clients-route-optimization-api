/*
 * Route Optimization
 * With the Route Optimization service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.routeoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.routeoptimization.model.MixedLoadingProhibition;
import com.ptvgroup.developer.client.routeoptimization.model.ViolationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Specifies a violation of a route.
 */
@ApiModel(description = "Specifies a violation of a route.")
@JsonPropertyOrder({
  Violation.JSON_PROPERTY_TYPE,
  Violation.JSON_PROPERTY_TIME_EXCEEDANCE,
  Violation.JSON_PROPERTY_CAPACITY_EXCEEDANCE,
  Violation.JSON_PROPERTY_MISSING_EQUIPMENT,
  Violation.JSON_PROPERTY_MIXED_LOADING_PROHIBITIONS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-16T11:56:46.561+02:00[Europe/Berlin]")
public class Violation {
  public static final String JSON_PROPERTY_TYPE = "type";
  private ViolationType type;

  public static final String JSON_PROPERTY_TIME_EXCEEDANCE = "timeExceedance";
  private Integer timeExceedance;

  public static final String JSON_PROPERTY_CAPACITY_EXCEEDANCE = "capacityExceedance";
  private List<Integer> capacityExceedance = null;

  public static final String JSON_PROPERTY_MISSING_EQUIPMENT = "missingEquipment";
  private List<String> missingEquipment = null;

  public static final String JSON_PROPERTY_MIXED_LOADING_PROHIBITIONS = "mixedLoadingProhibitions";
  private List<MixedLoadingProhibition> mixedLoadingProhibitions = null;

  public Violation() { 
  }

  public Violation type(ViolationType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ViolationType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ViolationType type) {
    this.type = type;
  }


  public Violation timeExceedance(Integer timeExceedance) {
    this.timeExceedance = timeExceedance;
    return this;
  }

   /**
   * Specifies a violation that involves a time limit: Time by which the limit is exceeded. Is only filled for the following violation types: _PLANNING_HORIZON_, _DRIVER_AVAILABILITY_, _OPENING_INTERVAL_, _MAXIMUM_TRAVEL_TIME_OF_DRIVER_, _MAXIMUM_DRIVING_TIME_OF_DRIVER_.
   * @return timeExceedance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a violation that involves a time limit: Time by which the limit is exceeded. Is only filled for the following violation types: _PLANNING_HORIZON_, _DRIVER_AVAILABILITY_, _OPENING_INTERVAL_, _MAXIMUM_TRAVEL_TIME_OF_DRIVER_, _MAXIMUM_DRIVING_TIME_OF_DRIVER_.")
  @JsonProperty(JSON_PROPERTY_TIME_EXCEEDANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeExceedance() {
    return timeExceedance;
  }


  @JsonProperty(JSON_PROPERTY_TIME_EXCEEDANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeExceedance(Integer timeExceedance) {
    this.timeExceedance = timeExceedance;
  }


  public Violation capacityExceedance(List<Integer> capacityExceedance) {
    this.capacityExceedance = capacityExceedance;
    return this;
  }

  public Violation addCapacityExceedanceItem(Integer capacityExceedanceItem) {
    if (this.capacityExceedance == null) {
      this.capacityExceedance = new ArrayList<>();
    }
    this.capacityExceedance.add(capacityExceedanceItem);
    return this;
  }

   /**
   * Specifies a violation of the capacities of the used vehicle: Exceedance of the capacity in each quantity dimension of goods. Is only filled for the following violation type: _VEHICLE_CAPACITY_.
   * @return capacityExceedance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a violation of the capacities of the used vehicle: Exceedance of the capacity in each quantity dimension of goods. Is only filled for the following violation type: _VEHICLE_CAPACITY_.")
  @JsonProperty(JSON_PROPERTY_CAPACITY_EXCEEDANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getCapacityExceedance() {
    return capacityExceedance;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITY_EXCEEDANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapacityExceedance(List<Integer> capacityExceedance) {
    this.capacityExceedance = capacityExceedance;
  }


  public Violation missingEquipment(List<String> missingEquipment) {
    this.missingEquipment = missingEquipment;
    return this;
  }

  public Violation addMissingEquipmentItem(String missingEquipmentItem) {
    if (this.missingEquipment == null) {
      this.missingEquipment = new ArrayList<>();
    }
    this.missingEquipment.add(missingEquipmentItem);
    return this;
  }

   /**
   * Specifies a violation for missing equipment (e.g. missing equipment of the used vehicle) that is required by the transports of the route. Is only filled for the following violation type: _VEHICLE_EQUIPMENT_.
   * @return missingEquipment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a violation for missing equipment (e.g. missing equipment of the used vehicle) that is required by the transports of the route. Is only filled for the following violation type: _VEHICLE_EQUIPMENT_.")
  @JsonProperty(JSON_PROPERTY_MISSING_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMissingEquipment() {
    return missingEquipment;
  }


  @JsonProperty(JSON_PROPERTY_MISSING_EQUIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMissingEquipment(List<String> missingEquipment) {
    this.missingEquipment = missingEquipment;
  }


  public Violation mixedLoadingProhibitions(List<MixedLoadingProhibition> mixedLoadingProhibitions) {
    this.mixedLoadingProhibitions = mixedLoadingProhibitions;
    return this;
  }

  public Violation addMixedLoadingProhibitionsItem(MixedLoadingProhibition mixedLoadingProhibitionsItem) {
    if (this.mixedLoadingProhibitions == null) {
      this.mixedLoadingProhibitions = new ArrayList<>();
    }
    this.mixedLoadingProhibitions.add(mixedLoadingProhibitionsItem);
    return this;
  }

   /**
   * Is only filled for the following violation type: _MIXED_LOADING_PROHIBITION_.
   * @return mixedLoadingProhibitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is only filled for the following violation type: _MIXED_LOADING_PROHIBITION_.")
  @JsonProperty(JSON_PROPERTY_MIXED_LOADING_PROHIBITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MixedLoadingProhibition> getMixedLoadingProhibitions() {
    return mixedLoadingProhibitions;
  }


  @JsonProperty(JSON_PROPERTY_MIXED_LOADING_PROHIBITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMixedLoadingProhibitions(List<MixedLoadingProhibition> mixedLoadingProhibitions) {
    this.mixedLoadingProhibitions = mixedLoadingProhibitions;
  }


  /**
   * Return true if this Violation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Violation violation = (Violation) o;
    return Objects.equals(this.type, violation.type) &&
        Objects.equals(this.timeExceedance, violation.timeExceedance) &&
        Objects.equals(this.capacityExceedance, violation.capacityExceedance) &&
        Objects.equals(this.missingEquipment, violation.missingEquipment) &&
        Objects.equals(this.mixedLoadingProhibitions, violation.mixedLoadingProhibitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, timeExceedance, capacityExceedance, missingEquipment, mixedLoadingProhibitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Violation {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timeExceedance: ").append(toIndentedString(timeExceedance)).append("\n");
    sb.append("    capacityExceedance: ").append(toIndentedString(capacityExceedance)).append("\n");
    sb.append("    missingEquipment: ").append(toIndentedString(missingEquipment)).append("\n");
    sb.append("    mixedLoadingProhibitions: ").append(toIndentedString(mixedLoadingProhibitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

