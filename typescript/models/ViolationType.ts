/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization
 * With the Route Optimization service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies the type of violation. 
 *  * `PLANNING_HORIZON` - The planning horizon is violated. 
 *  * `DRIVER_AVAILABILITY` - The availabilities of the driver are violated. 
 *  * `OPENING_INTERVAL` - The opening intervals of the location are violated. 
 *  * `VEHICLE_CAPACITY` - At least one of the vehicle capacities is violated. 
 *  * `VEHICLE_EQUIPMENT` - Not all vehicle equipment for the currently loaded transports is available. 
 *  * `MAXIMUM_TRAVEL_TIME_OF_DRIVER` - Indicates a violation of the maximum allowed travel time of driver as specified at the driver or by the drivers' working hours restriction. 
 *  * `MAXIMUM_DRIVING_TIME_OF_DRIVER` - Indicates a violation of the maximum allowed driving time of driver as specified at the driver or by the drivers' working hours restriction.
 *  * `REST_POSITION` - Indicates that a daily rest is not at the end of a trip. In this case the expected position for a daily rest is at the end of a trip. 
 *  * `STOP_POSITION_IN_TRIP` - Indicates a violation of the stop position in the trip. 
 *  * `TRIP_SECTION` - Indicates a violation of the trip section numbers of a customer stop. 
 *  * `MIXED_LOADING_PROHIBITION` - Indicates a violation of the mixed loading prohibitions.
 * @export
 * @enum {string}
 */
export enum ViolationType {
    PLANNING_HORIZON = 'PLANNING_HORIZON',
    DRIVER_AVAILABILITY = 'DRIVER_AVAILABILITY',
    OPENING_INTERVAL = 'OPENING_INTERVAL',
    VEHICLE_CAPACITY = 'VEHICLE_CAPACITY',
    VEHICLE_EQUIPMENT = 'VEHICLE_EQUIPMENT',
    MAXIMUM_TRAVEL_TIME_OF_DRIVER = 'MAXIMUM_TRAVEL_TIME_OF_DRIVER',
    MAXIMUM_DRIVING_TIME_OF_DRIVER = 'MAXIMUM_DRIVING_TIME_OF_DRIVER',
    REST_POSITION = 'REST_POSITION',
    STOP_POSITION_IN_TRIP = 'STOP_POSITION_IN_TRIP',
    TRIP_SECTION = 'TRIP_SECTION',
    MIXED_LOADING_PROHIBITION = 'MIXED_LOADING_PROHIBITION'
}

export function ViolationTypeFromJSON(json: any): ViolationType {
    return ViolationTypeFromJSONTyped(json, false);
}

export function ViolationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViolationType {
    return json as ViolationType;
}

export function ViolationTypeToJSON(value?: ViolationType | null): any {
    return value as any;
}

