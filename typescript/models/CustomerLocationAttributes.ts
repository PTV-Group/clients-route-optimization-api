/* tslint:disable */
/* eslint-disable */
/**
 * Route Optimization
 * With the Route Optimization service you can schedule and optimize the routes of your fleet.
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PositionInTrip,
    PositionInTripFromJSON,
    PositionInTripFromJSONTyped,
    PositionInTripToJSON,
} from './PositionInTrip';

/**
 * Attributes for a location of type CUSTOMER.
 * @export
 * @interface CustomerLocationAttributes
 */
export interface CustomerLocationAttributes {
    /**
     * The service time [s] that is required each time this location is visited in order to pick goods up or to deliver them. The location-dependent service time represents, for example, the time to enter the premises or to register at a customer. Besides a location-dependent service time, the user may specify additional vehicle-dependent and transport-dependent service times at the vehicles and the transports respectively.
     * @type {number}
     * @memberof CustomerLocationAttributes
     */
    serviceTimePerTransportStop?: number;
    /**
     * ID of the customer that can be set to link several customer locations with different opening intervals. Customer locations with the same customer ID may only differ in the location ID and in the opening intervals. If successive stops at customer locations share the same customer ID, the service time per transport stop of the location and of the vehicle are only considered at the first stop of the sequence.
     * @type {string}
     * @memberof CustomerLocationAttributes
     */
    customerId?: string;
    /**
     * 
     * @type {PositionInTrip}
     * @memberof CustomerLocationAttributes
     */
    positionInTrip?: PositionInTrip | null;
    /**
     * If tripSectionNumber is specified, a stop at this customer location will be visited after stops (within the same trip) at customer locations with specified lower tripSectionNumber and before stops (within the same trip) at customer locations with specified higher tripSectionNumber. Consequently, the trip section numbers of stops at customer locations must be non-decreasing within each trip. 
     * 
     * If specified, positionInTrip must not be set for the same location.
     * 
     * See [here](./concepts/trip-sections-and-position-trips) for more information.
     * @type {number}
     * @memberof CustomerLocationAttributes
     */
    tripSectionNumber?: number | null;
}

export function CustomerLocationAttributesFromJSON(json: any): CustomerLocationAttributes {
    return CustomerLocationAttributesFromJSONTyped(json, false);
}

export function CustomerLocationAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerLocationAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'serviceTimePerTransportStop': !exists(json, 'serviceTimePerTransportStop') ? undefined : json['serviceTimePerTransportStop'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
        'positionInTrip': !exists(json, 'positionInTrip') ? undefined : PositionInTripFromJSON(json['positionInTrip']),
        'tripSectionNumber': !exists(json, 'tripSectionNumber') ? undefined : json['tripSectionNumber'],
    };
}

export function CustomerLocationAttributesToJSON(value?: CustomerLocationAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'serviceTimePerTransportStop': value.serviceTimePerTransportStop,
        'customerId': value.customerId,
        'positionInTrip': PositionInTripToJSON(value.positionInTrip),
        'tripSectionNumber': value.tripSectionNumber,
    };
}

